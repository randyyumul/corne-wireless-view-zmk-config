/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <500>; };

/ {
    combos {
        compatible = "zmk,combos";

        LGUI_COMBO {
            bindings = <&kp LGUI>;
            key-positions = <38 37>;
        };

        RGUI_COMBO {
            bindings = <&kp RGUI>;
            key-positions = <39 40>;
        };

        LALT_COMBO {
            bindings = <&kp LEFT_ALT>;
            key-positions = <36 37>;
        };

        RALT_COMBO {
            bindings = <&kp RALT>;
            key-positions = <40 41>;
        };

        EscapeCombo {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U      &kp I          &kp O    &kp P           &kp SQT
&mt LCTRL ESCAPE  &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J      &kp K          &kp L    &kp SEMI        &kp ENTER
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M      &kp COMMA      &kp DOT  &mt RCTRL FSLH  &kp RIGHT_SHIFT
                                &mo 3  &kp SPACE  &sl 2    &mo 1  &kp SPACE  &kp BACKSPACE
            >;
        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Navigation";
            bindings = <
&trans  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(NUMBER_5)    &kp LC(NUMBER_6)          &kp LS(LG(LEFT_BRACKET))  &kp RS(RG(RIGHT_BRACKET))  &kp RC(O)                  &kp RC(RIGHT_BRACKET)  &none
&trans  &kp CARET         &kp HOME          &kp PG_UP         &kp PAGE_DOWN     &kp END             &kp LEFT                  &kp DOWN                  &kp UP_ARROW               &kp RIGHT                  &kp DOLLAR             &trans
&to 0   &tog 1            &to 2             &to 3             &to 4             &to 5               &kp LS(LC(LEFT_BRACKET))  &kp LG(LEFT_BRACKET)      &kp RG(RIGHT_BRACKET)      &kp RS(RC(RIGHT_BRACKET))  &trans                 &trans
                                            &trans            &to 0             &trans              &trans                    &trans                    &trans
            >;
        };

        punct {
            bindings = <
&kp GRAVE  &kp EXCL          &kp ASTERISK      &kp HASH          &kp DOLLAR        &kp PERCENT    &kp CARET         &kp AMPERSAND         &kp ASTERISK           &kp MINUS          &kp UNDERSCORE  &trans
&trans     &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)     &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp PIPE        &trans
&trans     &kp LG(NUMBER_6)  &kp LG(N7)        &kp LG(N8)        &kp LG(N9)        &kp LG(N0)     &kp EQUAL         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH      &trans          &trans
                                               &trans            &to 0             &trans         &trans            &trans                &trans
            >;

            label = "punct";
        };

        num {
            bindings = <
&none  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6         &kp N7           &kp N8      &kp N9  &kp N0           &trans
&none  &none   &none   &none   &none   &none     &kp ASTERISK   &kp N4           &kp N5      &kp N6  &kp PLUS         &kp KP_EQUAL
&none  &none   &none   &none   &none   &none     &kp KP_DIVIDE  &kp N1           &kp N2      &kp N3  &kp KP_SUBTRACT  &trans
                       &trans  &to 0   &trans    &trans         &kp KP_NUMBER_0  &kp KP_DOT
            >;

            label = "num";
        };

        media {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_REWIND  &kp C_PP  &kp C_FAST_FORWARD
&none           &none         &none         &none         &none         &none           &none       &none              &none            &none         &none     &none
&none           &none         &none         &none         &none         &none           &none       &none              &none            &none         &none     &none
                                            &trans        &to 0         &trans          &trans      &trans             &trans
            >;

            label = "media";
        };

        func {
            bindings = <
&trans     &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10    &kp F11
&kp LCTRL  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans     &kp F12
&trans     &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp RCTRL  &trans
                           &trans  &to 0   &trans    &trans  &trans  &trans
            >;

            label = "FUNC";
        };
    };
};
